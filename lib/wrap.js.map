{"version":3,"file":"wrap.js","sourceRoot":"","sources":["../src/wrap.ts"],"names":[],"mappings":";;AAAA,uCAAiC;AACjC,qCAKmB;AACnB,6CAA+C;AAE/C,IAAM,SAAS,GAAG,0BAAgB,CAAC,eAAe,CAChD,IAAI,yBAAe,CAAC,gBAAI,EAAE,IAAI,4BAAc,EAAE,CAAC,CAChD,CAAC;AAEF,cAAqB,QAA6B;IAChD,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AAC7B,CAAC;AAFD,oBAEC;AACgB,oBAAI;AACrB,kBAAe,SAAS,CAAC","sourcesContent":["import { wrap } from 'lodash-es';\r\nimport {\r\n  DecoratorConfig,\r\n  DecoratorFactory,\r\n  ResolvableFunction,\r\n  LodashMethodDecorator\r\n} from './factory';\r\nimport { WrapApplicator } from './applicators';\r\n\r\nconst decorator = DecoratorFactory.createDecorator(\r\n  new DecoratorConfig(wrap, new WrapApplicator())\r\n);\r\n\r\nexport function Wrap(fnToWrap?: ResolvableFunction): LodashMethodDecorator {\r\n  return decorator(fnToWrap);\r\n}\r\nexport { Wrap as wrap };\r\nexport default decorator;\r\n"]}