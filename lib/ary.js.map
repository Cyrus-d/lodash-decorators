{"version":3,"file":"ary.js","sourceRoot":"","sources":["../src/ary.ts"],"names":[],"mappings":";;AAAA,uCAAgC;AAEhC,qCAAqF;AACrF,6CAAmD;AAEnD,IAAM,SAAS,GAAG,0BAAgB,CAAC,eAAe,CAChD,IAAI,yBAAe,CAAC,eAAG,EAAE,IAAI,gCAAkB,EAAE,CAAC,CACnD,CAAC;AAEF;;;;;;;;;;;;;;;GAeG;AACH,aAAoB,CAAS;IAC3B,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC;AAFD,kBAEC;AACe,kBAAG;AACnB,kBAAe,SAAS,CAAC","sourcesContent":["import { ary } from 'lodash-es';\r\n\r\nimport { DecoratorConfig, DecoratorFactory, LodashMethodDecorator } from './factory';\r\nimport { PreValueApplicator } from './applicators';\r\n\r\nconst decorator = DecoratorFactory.createDecorator(\r\n  new DecoratorConfig(ary, new PreValueApplicator())\r\n);\r\n\r\n/**\r\n * Creates a function that invokes func, with up to n arguments, ignoring any additional arguments.\r\n * @param {number} n The arity cap.\r\n * @example\r\n *\r\n * class MyClass {\r\n *   @Ary(1)\r\n *   fn(...args) {\r\n *     return args;\r\n *   }\r\n * }\r\n *\r\n * const myClass = new MyClass();\r\n *\r\n * myClass.fn(1, 2, 3, 4); // => [ 1 ]\r\n */\r\nexport function Ary(n: number): LodashMethodDecorator {\r\n  return decorator(n);\r\n}\r\nexport { Ary as ary };\r\nexport default decorator;\r\n"]}