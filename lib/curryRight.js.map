{"version":3,"file":"curryRight.js","sourceRoot":"","sources":["../src/curryRight.ts"],"names":[],"mappings":";;AAAA,uCAAuC;AACvC,qCAAuF;AACvF,6CAAmD;AAEnD;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACU,QAAA,UAAU,GAAG,0BAAgB,CAAC,uBAAuB,CAChE,IAAI,yBAAe,CAAC,sBAAU,EAAE,IAAI,gCAAkB,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAC9D,CAAC;AACd,qBAHV,kBAAU,CAGU;AACjC,kBAAe,kBAAU,CAAC","sourcesContent":["import { curryRight } from 'lodash-es';\r\nimport { DecoratorConfig, DecoratorFactory, BiTypedMethodDecorator1 } from './factory';\r\nimport { PreValueApplicator } from './applicators';\r\n\r\n/**\r\n * This method is like _.curry except that arguments are applied to func in the manner of _.partialRight instead of _.partial.\r\n * The arity of func may be specified if func.length is not sufficient.\r\n * The original function is bound to the instance. If the method is needed to call in a different context use `CurryAll`.\r\n *\r\n * The _.curryRight.placeholder value, which defaults to _ in monolithic builds, may be used as a placeholder for provided arguments.\r\n *\r\n * Note: This method doesn't set the \"length\" property of curried functions.\r\n * @param {number} [arity] The arity of func.\r\n * @example\r\n *\r\n * class MyClass {\r\n *   multiplier = 2;\r\n *\r\n *   @CurryRight()\r\n *   add(a, b) {\r\n *     return (a + b) * this.multiplier;\r\n *   }\r\n * }\r\n *\r\n * const myClass = new MyClass();\r\n *\r\n * const add5 = myClass.add(5);\r\n *\r\n * add5AndMultiply(10); // => 30\r\n */\r\nexport const CurryRight = DecoratorFactory.createInstanceDecorator(\r\n  new DecoratorConfig(curryRight, new PreValueApplicator(), { bound: true, optionalParams: true })\r\n) as BiTypedMethodDecorator1<number>;\r\nexport { CurryRight as curryRight };\r\nexport default CurryRight;\r\n"]}