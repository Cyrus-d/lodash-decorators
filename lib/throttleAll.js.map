{"version":3,"file":"throttleAll.js","sourceRoot":"","sources":["../src/throttleAll.ts"],"names":[],"mappings":";;AAAA,uCAAqC;AACrC,qCAAqF;AACrF,6CAAmD;AAGnD,IAAM,SAAS,GAAG,0BAAgB,CAAC,eAAe,CAChD,IAAI,yBAAe,CAAC,oBAAQ,EAAE,IAAI,gCAAkB,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAC1E,CAAC;AACF,qBAA4B,IAAa,EAAE,OAAyB;IAClE,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAClC,CAAC;AAFD,kCAEC;AACuB,kCAAW;AACnC,kBAAe,SAAS,CAAC","sourcesContent":["import { throttle } from 'lodash-es';\r\nimport { DecoratorConfig, DecoratorFactory, LodashMethodDecorator } from './factory';\r\nimport { PreValueApplicator } from './applicators';\r\nimport { ThrottleOptions } from './shared';\r\n\r\nconst decorator = DecoratorFactory.createDecorator(\r\n  new DecoratorConfig(throttle, new PreValueApplicator(), { setter: true })\r\n);\r\nexport function ThrottleAll(wait?: number, options?: ThrottleOptions): LodashMethodDecorator {\r\n  return decorator(wait, options);\r\n}\r\nexport { ThrottleAll as throttleAll };\r\nexport default decorator;\r\n"]}