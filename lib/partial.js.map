{"version":3,"file":"partial.js","sourceRoot":"","sources":["../src/partial.ts"],"names":[],"mappings":";;AAAA,uCAAoC;AACpC,qCAA8D;AAC9D,6CAAkD;AAElD,IAAM,SAAS,GAAG,0BAAgB,CAAC,uBAAuB,CACxD,IAAI,yBAAe,CAAC,mBAAO,EAAE,IAAI,+BAAiB,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CACzF,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;GAoBG;AACH;IAAwB,kBAAkB;SAAlB,UAAkB,EAAlB,qBAAkB,EAAlB,IAAkB;QAAlB,6BAAkB;;IACxC,OAAO,SAAS,eAAI,QAAQ,EAAE;AAChC,CAAC;AAFD,0BAEC;AACmB,0BAAO;AAC3B,kBAAe,SAAS,CAAC","sourcesContent":["import { partial } from 'lodash-es';\r\nimport { DecoratorConfig, DecoratorFactory } from './factory';\r\nimport { PartialApplicator } from './applicators';\r\n\r\nconst decorator = DecoratorFactory.createInstanceDecorator(\r\n  new DecoratorConfig(partial, new PartialApplicator(), { property: true, method: false })\r\n);\r\n\r\n/**\r\n * Partially applies arguments to a function.\r\n * @export\r\n * @param {...any[]} partials\r\n * @returns {PropertyDecorator}\r\n * @example\r\n * class MyClass {\r\n *   lastName: string = 'Schmo';\r\n *\r\n *   @Partial('fn', 'Joe')\r\n *   fn2: () => string;\r\n *\r\n *   fn(name: string): string {\r\n *     return `${name} ${this.lastName}`;\r\n *   }\r\n * }\r\n *\r\n * const myClass = new MyClass();\r\n *\r\n * myClass.fn2(); //=> 'Joe Schmo'\r\n */\r\nexport function Partial(...partials: any[]): PropertyDecorator {\r\n  return decorator(...partials);\r\n}\r\nexport { Partial as partial };\r\nexport default decorator;\r\n"]}