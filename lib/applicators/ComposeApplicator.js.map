{"version":3,"file":"ComposeApplicator.js","sourceRoot":"","sources":["../../src/applicators/ComposeApplicator.ts"],"names":[],"mappings":";;;AAAA,uCAAqC;AACrC,2CAA4D;AAC5D,kCAA2C;AAE3C;IAAuC,6CAAU;IAC/C,2BAAoB,OAAgC;QAAhC,wBAAA,EAAA,YAAgC;QAApD,YACE,iBAAO,SACR;QAFmB,aAAO,GAAP,OAAO,CAAyB;;IAEpD,CAAC;IAED,sBAAI,mCAAI;aAAR;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC;QACpC,CAAC;;;OAAA;IAED,iCAAK,GAAL,UAAM,EAAyE;YAA7D,2BAAO,EAAI,aAAgB,EAAhB,iDAAgB,EAAE,cAAI,EAAE,kBAAM;QACzD,IAAM,UAAU,GAAG,IAAI,CAAC;QAExB,OAAO;YAAA,iBAYN;YAZe,oBAAoB;iBAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;gBAApB,+BAAoB;;YAClC,IAAM,KAAK,GACN,IAAI,CAAC,GAAG,CAAC,UAAC,MAAM,IAAK,OAAA,uBAAe,CAAC,MAAM,EAAE,KAAI,EAAE,MAAM,CAAC,EAArC,CAAqC,CAAC,QAC/D,CAAC;YAEF,IAAI,UAAU,CAAC,IAAI,EAAE;gBACnB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACnB;iBAAM;gBACL,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACtB;YAED,OAAO,OAAO,eAAI,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QACnD,CAAC,CAAC;IACJ,CAAC;IACH,wBAAC;AAAD,CAAC,AA1BD,CAAuC,uBAAU,GA0BhD;AA1BY,8CAAiB","sourcesContent":["import { identity } from 'lodash-es';\r\nimport { Applicator, ApplicateOptions } from './Applicator';\r\nimport { resolveFunction } from '../utils';\r\n\r\nexport class ComposeApplicator extends Applicator {\r\n  constructor(private _config: { post?: boolean } = {}) {\r\n    super();\r\n  }\r\n\r\n  get post(): boolean {\r\n    return this._config.post === true;\r\n  }\r\n\r\n  apply({ config: { execute }, value = identity, args, target }: ApplicateOptions): any {\r\n    const applicator = this;\r\n\r\n    return function(...invokeArgs: any[]): any {\r\n      const _args = [\r\n        ...args.map((method) => resolveFunction(method, this, target))\r\n      ];\r\n\r\n      if (applicator.post) {\r\n        _args.push(value);\r\n      } else {\r\n        _args.unshift(value);\r\n      }\r\n\r\n      return execute(..._args).apply(this, invokeArgs);\r\n    };\r\n  }\r\n}\r\n"]}