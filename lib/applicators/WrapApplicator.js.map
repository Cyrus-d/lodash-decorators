{"version":3,"file":"WrapApplicator.js","sourceRoot":"","sources":["../../src/applicators/WrapApplicator.ts"],"names":[],"mappings":";;;AAAA,2CAA4D;AAC5D,kCAA2C;AAE3C;IAAoC,0CAAU;IAA9C;;IAMA,CAAC;IALC,8BAAK,GAAL,UAAM,EAA8D;YAA5D,cAAI,EAAY,2BAAO,EAAI,kBAAM,EAAE,gBAAK;QAC9C,OAAO;YAAS,oBAAoB;iBAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;gBAApB,+BAAoB;;YAClC,OAAO,OAAO,CAAC,uBAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QACxF,CAAC,CAAC;IACJ,CAAC;IACH,qBAAC;AAAD,CAAC,AAND,CAAoC,uBAAU,GAM7C;AANY,wCAAc","sourcesContent":["import { Applicator, ApplicateOptions } from './Applicator';\r\nimport { resolveFunction } from '../utils';\r\n\r\nexport class WrapApplicator extends Applicator {\r\n  apply({ args, config: { execute }, target, value }: ApplicateOptions): any {\r\n    return function(...invokeArgs: any[]): any {\r\n      return execute(resolveFunction(args[0], this, target), value).apply(this, invokeArgs);\r\n    };\r\n  }\r\n}"]}