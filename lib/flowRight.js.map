{"version":3,"file":"flowRight.js","sourceRoot":"","sources":["../src/flowRight.ts"],"names":[],"mappings":";;AAAA,uCAAsC;AACtC,qCAKmB;AACnB,6CAAkD;AAElD,IAAM,SAAS,GAAG,0BAAgB,CAAC,uBAAuB,CACxD,IAAI,yBAAe,CAAC,qBAAS,EAAE,IAAI,+BAAiB,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAC3F,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;GAoBG;AACH;IAA0B,aAA4B;SAA5B,UAA4B,EAA5B,qBAA4B,EAA5B,IAA4B;QAA5B,wBAA4B;;IACpD,MAAM,CAAC,SAAS,eAAI,GAAG,EAAE;AAC3B,CAAC;AAFD,8BAEC;AACqB,8BAAS;AAC/B,kBAAe,SAAS,CAAC","sourcesContent":["import { flowRight } from 'lodash-es';\r\nimport {\r\n  DecoratorConfig,\r\n  DecoratorFactory,\r\n  LodashDecorator,\r\n  ResolvableFunction\r\n} from './factory';\r\nimport { ComposeApplicator } from './applicators';\r\n\r\nconst decorator = DecoratorFactory.createInstanceDecorator(\r\n  new DecoratorConfig(flowRight, new ComposeApplicator({ post: false }), { property: true })\r\n);\r\n\r\n/**\r\n * Creates a function that returns the result of invoking the given functions with the this binding of the created function,\r\n * where each successive invocation is supplied the return value of the previous.\r\n *\r\n * @example\r\n *\r\n * class MyClass {\r\n *   name = 'Ted';\r\n *\r\n *   @FlowRight(toUpperCase, 'getName')\r\n *   getUpperCaseName: () => string;\r\n *\r\n *   getName() {\r\n *     return this.name;\r\n *   }\r\n * }\r\n *\r\n * const myClass = new MyClass();\r\n *\r\n * myClass.getUpperCaseName(); // => 'TED'\r\n */\r\nexport function FlowRight(...fns: ResolvableFunction[]): LodashDecorator {\r\n  return decorator(...fns);\r\n}\r\nexport { FlowRight as flowRight };\r\nexport default decorator;\r\n"]}