{"version":3,"file":"common.js","sourceRoot":"","sources":["../../src/factory/common.ts"],"names":[],"mappings":";;AACA,kCAA+C;AAoClC,QAAA,gBAAgB,GAAG,IAAI,2BAAmB,EAAqB,CAAC","sourcesContent":["import { Applicator } from '../applicators';\r\nimport { CompositeKeyWeakMap } from '../utils';\r\n\r\n// tslint:disable-next-line:interface-over-type-literal\r\nexport type ApplicatorToken = { new(): Applicator };\r\nexport type LodashMethodDecorator = MethodDecorator;\r\nexport type LodashDecorator = MethodDecorator & PropertyDecorator;\r\nexport type ResolvableFunction = string | Function;\r\n\r\nexport type BiTypedMethodDecorator = (() => LodashMethodDecorator) & LodashMethodDecorator;\r\nexport type BiTypedMethodDecorator1<T> = ((arg?: T) => LodashMethodDecorator) & LodashMethodDecorator;\r\nexport type BiTypedMethodDecorator2<T, T2> = ((arg1?: T, arg2?: T2) => LodashMethodDecorator) & LodashMethodDecorator;\r\nexport type BiTypedMethodDecorator3<T, T2, T3> = ((arg1?: T, arg2?: T2, arg3?: T3) => LodashMethodDecorator) & LodashMethodDecorator;\r\nexport type BiTypedMethodDecoratorN = ((...args: any[]) => LodashMethodDecorator) & LodashMethodDecorator;\r\nexport type BiTypedDecorator = (() => LodashDecorator) & LodashDecorator;\r\nexport type BiTypedDecorator1<T> = ((arg?: T) => LodashDecorator) & LodashDecorator;\r\nexport type BiTypedDecorator2<T, T2> = ((arg1?: T, arg2?: T2) => LodashDecorator) & LodashDecorator;\r\nexport type BiTypedDecorator3<T, T2, T3> = ((arg1?: T, arg2?: T2, arg3?: T3) => LodashDecorator) & LodashDecorator;\r\nexport type BiTypedDecoratorN = ((...args: any[]) => LodashDecorator) & LodashDecorator;\r\n\r\nexport interface InstanceChainContext {\r\n  getter?: boolean;\r\n  setter?: boolean;\r\n  method?: boolean;\r\n  property?: boolean;\r\n  value: any;\r\n}\r\n\r\nexport interface InstanceChainData {\r\n  properties: string[];\r\n  fns: Function[];\r\n  isGetter: boolean;\r\n  isSetter: boolean;\r\n  isMethod: boolean;\r\n  isProperty: boolean;\r\n}\r\n\r\nexport const InstanceChainMap = new CompositeKeyWeakMap<InstanceChainData>();\r\n"]}