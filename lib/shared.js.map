{"version":3,"file":"shared.js","sourceRoot":"","sources":["../src/shared.ts"],"names":[],"mappings":"","sourcesContent":["import { DecoratorConfig, ResolvableFunction } from './factory';\r\n\r\nexport interface DebounceOptions {\r\n  wait?: number;\r\n  leading?: boolean;\r\n  trailing?: boolean;\r\n  maxWait?: number;\r\n}\r\n\r\nexport interface ApplicateOptions {\r\n  config: DecoratorConfig;\r\n  target: any;\r\n  value: any;\r\n  args: any[];\r\n  instance?: Object;\r\n}\r\n\r\nexport interface ThrottleOptions {\r\n  leading?: boolean;\r\n  trailing?: boolean;\r\n}\r\n\r\nexport interface MemoizeMap<T, U> {\r\n  get(key: T): U;\r\n  has(key: T): boolean;\r\n  set(key: T, value: U): void;\r\n  delete(key: T): void;\r\n  clear?(): void;\r\n}\r\n\r\nexport interface MemoizeConfig<T, U> {\r\n  resolver?: ResolvableFunction;\r\n  type?: { new (...args: any[]): MemoizeMap<T, U> };\r\n  cache?: MemoizeMap<T, U>;\r\n}"]}